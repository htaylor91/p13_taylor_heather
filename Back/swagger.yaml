openapi: 3.0.0
info:
  version: 1.0.0
  title: Argent Bank API documentation
  description: Proposed API endpoints for Argent Bank transactions
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      requestBody:
        required: true
        description: Login Payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: User login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User signup successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/profile:
    get:
      security:
        - bearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - $ref: '#/components/parameters/securityHeader'
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      security:
        - bearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - $ref: '#/components/parameters/securityHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile retrieved successully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/accounts:
    get:
      summary: All user accounts
      tags:
        - Accounts Module
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/securityHeader'
      responses:
        '200':
          description: Successfully retrieved accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/accounts/{accountIdentifier}/transactions:
    get:
      summary: All transactions for a specific account for a specific month
      tags:
        - Transaction Module
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/securityHeader'
        - $ref: '#/components/parameters/accountIdentifier'
        - $ref: '#/components/parameters/month'
      responses:
        '200':
          description: Successfully retrieved transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/accounts/{accountIdentifier}/transactions/{transactionId}:
    patch:
      summary: Update the details of a specific transaction
      description: To add or update a note, provide a non-null "note" value in the request body.
        To delete a note, provide a null "note" value in the request body.
        To update the category, provide a non-null "category" value in the request body.
      tags:
        - Transaction Module
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/securityHeader'
        - $ref: '#/components/parameters/accountIdentifier'
        - $ref: '#/components/parameters/transactionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/TransactionCategory'
                notes:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Successfully updated the transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
servers:
  - url: localhost:3001/api/v2
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    securityHeader:
      in: header
      name: securitySchemes
      description: Attach Bearer JWT token
      schema:
        type: string
      required: true
    accountIdentifier:
      in: path
      name: accountIdentifier
      required: true
      schema:
        type: string
      description: The unique account identifier
      example: "x1234"
    transactionId:
      in: path
      name: transactionId
      required: true
      schema:
        type: string
      description: The unique transaction identifier
      example: "t5678"
    month:
      in: query
      name: month
      required: true
      schema:
        type: string
        format: date
      description: The year and month for which transactions are to be retrieved
      example: "2023-04"
  responses:
    BadRequestError:
      description: Invalid fields
    UnauthorizedError:
      description: Unauthorized, missing or invalid Bearer token
    NotFoundError:
      description: Not found
    InternalServerError:
      description: Internal server error
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
    Login:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
    UserApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
            firstName:
              type: string
            lastName:
              type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    AccountResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: array
          items: 
            $ref: '#/components/schemas/Account'
    TransactionsResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: array
          items: 
            $ref: '#/components/schemas/Transaction'
    TransactionResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          $ref: '#/components/schemas/Transaction'
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    MonetaryValue:
      type: string
      pattern: '^[0-9]*\.[0-9]{2}$'
      description: Monetary value to exactly two decimal places
      example: 254.99
    Account:
      type: object
      properties:
        type:
          type: string
          enum:
            - Checking
            - Savings
            - CreditCard
            - AutoLoan
        identifier:
          type: string
          pattern: '^x\d{4}$'
        description:
          type: string
          enum:
            - Available Balance
            - Current Balance
        balance:
          $ref: '#/components/schemas/MonetaryValue'
      required:
        - type
        - identifier
        - description
        - balance
    Transaction:
      type: object
      description: A unique transaction
      properties:
        id:
          type: string
          example: "t5678"
        date:
          type: string
          format: date-time
          description: Complete date plus hours, minutes, and seconds, including time zone designator (format YYYY-MM-DDThh:mm:ssTZD)
          example: 2023-06-13T19:20:30+01:00
        description:
          type: string
          example: Golden Sun Bakery
        amount:
          $ref: '#/components/schemas/MonetaryValue'
        balance:
          $ref: '#/components/schemas/MonetaryValue'
        type: 
          type: string
          enum: 
            - Cash
            - Check
            - Electronic
          example: Electronic
        category:
          $ref: '#/components/schemas/TransactionCategory'
        notes: 
          type: string
          example: Birthday dinner
      required:
        - id
        - date
        - description
        - amount
        - balance
        - type
        - category
        - notes
    TransactionCategory:
      type: string
      description: The transaction category, which is defined by the bank by default
      enum:
        - Groceries
        - Utilities
        - Housing
        - Transportation
        - Dining
        - Entertainment
        - Health
        - Shopping
        - Travel
        - Education
      example: Entertainment